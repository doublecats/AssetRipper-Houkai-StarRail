// Simple, thoroughly commented implementation of 128-bit AES / Rijndael using C#
// Chris Hulbert - chris.hulbert@gmail.com - http://splinter.com.au/blog - http://github.com/chrishulbert/crypto
// References:
// http://en.wikipedia.org/wiki/Advanced_Encryption_Standard
// http://en.wikipedia.org/wiki/Rijndael_key_schedule
// http://en.wikipedia.org/wiki/Rijndael_mix_columns
// http://en.wikipedia.org/wiki/Rijndael_S-box
// To compile this, in the visual studio command prompt do: 'csc cs-aes.cs'

using System;

namespace AssetRipper.Core.Utils
{
    public static class AESUtils
    {
        // Here are all the lookup tables for the row shifts, rcon, s-boxes, and galois field multiplications
        static byte[] shift_rows_table_inv = { 0, 13, 10, 7, 4, 1, 14, 11, 8, 5, 2, 15, 12, 9, 6, 3 };
        static byte[] lookup_sbox_inv = { 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };
        static byte[] lookup_g9 = { 0x00, 0x09, 0x12, 0x1b, 0x24, 0x2d, 0x36, 0x3f, 0x48, 0x41, 0x5a, 0x53, 0x6c, 0x65, 0x7e, 0x77, 0x90, 0x99, 0x82, 0x8b, 0xb4, 0xbd, 0xa6, 0xaf, 0xd8, 0xd1, 0xca, 0xc3, 0xfc, 0xf5, 0xee, 0xe7, 0x3b, 0x32, 0x29, 0x20, 0x1f, 0x16, 0x0d, 0x04, 0x73, 0x7a, 0x61, 0x68, 0x57, 0x5e, 0x45, 0x4c, 0xab, 0xa2, 0xb9, 0xb0, 0x8f, 0x86, 0x9d, 0x94, 0xe3, 0xea, 0xf1, 0xf8, 0xc7, 0xce, 0xd5, 0xdc, 0x76, 0x7f, 0x64, 0x6d, 0x52, 0x5b, 0x40, 0x49, 0x3e, 0x37, 0x2c, 0x25, 0x1a, 0x13, 0x08, 0x01, 0xe6, 0xef, 0xf4, 0xfd, 0xc2, 0xcb, 0xd0, 0xd9, 0xae, 0xa7, 0xbc, 0xb5, 0x8a, 0x83, 0x98, 0x91, 0x4d, 0x44, 0x5f, 0x56, 0x69, 0x60, 0x7b, 0x72, 0x05, 0x0c, 0x17, 0x1e, 0x21, 0x28, 0x33, 0x3a, 0xdd, 0xd4, 0xcf, 0xc6, 0xf9, 0xf0, 0xeb, 0xe2, 0x95, 0x9c, 0x87, 0x8e, 0xb1, 0xb8, 0xa3, 0xaa, 0xec, 0xe5, 0xfe, 0xf7, 0xc8, 0xc1, 0xda, 0xd3, 0xa4, 0xad, 0xb6, 0xbf, 0x80, 0x89, 0x92, 0x9b, 0x7c, 0x75, 0x6e, 0x67, 0x58, 0x51, 0x4a, 0x43, 0x34, 0x3d, 0x26, 0x2f, 0x10, 0x19, 0x02, 0x0b, 0xd7, 0xde, 0xc5, 0xcc, 0xf3, 0xfa, 0xe1, 0xe8, 0x9f, 0x96, 0x8d, 0x84, 0xbb, 0xb2, 0xa9, 0xa0, 0x47, 0x4e, 0x55, 0x5c, 0x63, 0x6a, 0x71, 0x78, 0x0f, 0x06, 0x1d, 0x14, 0x2b, 0x22, 0x39, 0x30, 0x9a, 0x93, 0x88, 0x81, 0xbe, 0xb7, 0xac, 0xa5, 0xd2, 0xdb, 0xc0, 0xc9, 0xf6, 0xff, 0xe4, 0xed, 0x0a, 0x03, 0x18, 0x11, 0x2e, 0x27, 0x3c, 0x35, 0x42, 0x4b, 0x50, 0x59, 0x66, 0x6f, 0x74, 0x7d, 0xa1, 0xa8, 0xb3, 0xba, 0x85, 0x8c, 0x97, 0x9e, 0xe9, 0xe0, 0xfb, 0xf2, 0xcd, 0xc4, 0xdf, 0xd6, 0x31, 0x38, 0x23, 0x2a, 0x15, 0x1c, 0x07, 0x0e, 0x79, 0x70, 0x6b, 0x62, 0x5d, 0x54, 0x4f, 0x46 };
        static byte[] lookup_g11 = { 0x00, 0x0b, 0x16, 0x1d, 0x2c, 0x27, 0x3a, 0x31, 0x58, 0x53, 0x4e, 0x45, 0x74, 0x7f, 0x62, 0x69, 0xb0, 0xbb, 0xa6, 0xad, 0x9c, 0x97, 0x8a, 0x81, 0xe8, 0xe3, 0xfe, 0xf5, 0xc4, 0xcf, 0xd2, 0xd9, 0x7b, 0x70, 0x6d, 0x66, 0x57, 0x5c, 0x41, 0x4a, 0x23, 0x28, 0x35, 0x3e, 0x0f, 0x04, 0x19, 0x12, 0xcb, 0xc0, 0xdd, 0xd6, 0xe7, 0xec, 0xf1, 0xfa, 0x93, 0x98, 0x85, 0x8e, 0xbf, 0xb4, 0xa9, 0xa2, 0xf6, 0xfd, 0xe0, 0xeb, 0xda, 0xd1, 0xcc, 0xc7, 0xae, 0xa5, 0xb8, 0xb3, 0x82, 0x89, 0x94, 0x9f, 0x46, 0x4d, 0x50, 0x5b, 0x6a, 0x61, 0x7c, 0x77, 0x1e, 0x15, 0x08, 0x03, 0x32, 0x39, 0x24, 0x2f, 0x8d, 0x86, 0x9b, 0x90, 0xa1, 0xaa, 0xb7, 0xbc, 0xd5, 0xde, 0xc3, 0xc8, 0xf9, 0xf2, 0xef, 0xe4, 0x3d, 0x36, 0x2b, 0x20, 0x11, 0x1a, 0x07, 0x0c, 0x65, 0x6e, 0x73, 0x78, 0x49, 0x42, 0x5f, 0x54, 0xf7, 0xfc, 0xe1, 0xea, 0xdb, 0xd0, 0xcd, 0xc6, 0xaf, 0xa4, 0xb9, 0xb2, 0x83, 0x88, 0x95, 0x9e, 0x47, 0x4c, 0x51, 0x5a, 0x6b, 0x60, 0x7d, 0x76, 0x1f, 0x14, 0x09, 0x02, 0x33, 0x38, 0x25, 0x2e, 0x8c, 0x87, 0x9a, 0x91, 0xa0, 0xab, 0xb6, 0xbd, 0xd4, 0xdf, 0xc2, 0xc9, 0xf8, 0xf3, 0xee, 0xe5, 0x3c, 0x37, 0x2a, 0x21, 0x10, 0x1b, 0x06, 0x0d, 0x64, 0x6f, 0x72, 0x79, 0x48, 0x43, 0x5e, 0x55, 0x01, 0x0a, 0x17, 0x1c, 0x2d, 0x26, 0x3b, 0x30, 0x59, 0x52, 0x4f, 0x44, 0x75, 0x7e, 0x63, 0x68, 0xb1, 0xba, 0xa7, 0xac, 0x9d, 0x96, 0x8b, 0x80, 0xe9, 0xe2, 0xff, 0xf4, 0xc5, 0xce, 0xd3, 0xd8, 0x7a, 0x71, 0x6c, 0x67, 0x56, 0x5d, 0x40, 0x4b, 0x22, 0x29, 0x34, 0x3f, 0x0e, 0x05, 0x18, 0x13, 0xca, 0xc1, 0xdc, 0xd7, 0xe6, 0xed, 0xf0, 0xfb, 0x92, 0x99, 0x84, 0x8f, 0xbe, 0xb5, 0xa8, 0xa3 };
        static byte[] lookup_g13 = { 0x00, 0x0d, 0x1a, 0x17, 0x34, 0x39, 0x2e, 0x23, 0x68, 0x65, 0x72, 0x7f, 0x5c, 0x51, 0x46, 0x4b, 0xd0, 0xdd, 0xca, 0xc7, 0xe4, 0xe9, 0xfe, 0xf3, 0xb8, 0xb5, 0xa2, 0xaf, 0x8c, 0x81, 0x96, 0x9b, 0xbb, 0xb6, 0xa1, 0xac, 0x8f, 0x82, 0x95, 0x98, 0xd3, 0xde, 0xc9, 0xc4, 0xe7, 0xea, 0xfd, 0xf0, 0x6b, 0x66, 0x71, 0x7c, 0x5f, 0x52, 0x45, 0x48, 0x03, 0x0e, 0x19, 0x14, 0x37, 0x3a, 0x2d, 0x20, 0x6d, 0x60, 0x77, 0x7a, 0x59, 0x54, 0x43, 0x4e, 0x05, 0x08, 0x1f, 0x12, 0x31, 0x3c, 0x2b, 0x26, 0xbd, 0xb0, 0xa7, 0xaa, 0x89, 0x84, 0x93, 0x9e, 0xd5, 0xd8, 0xcf, 0xc2, 0xe1, 0xec, 0xfb, 0xf6, 0xd6, 0xdb, 0xcc, 0xc1, 0xe2, 0xef, 0xf8, 0xf5, 0xbe, 0xb3, 0xa4, 0xa9, 0x8a, 0x87, 0x90, 0x9d, 0x06, 0x0b, 0x1c, 0x11, 0x32, 0x3f, 0x28, 0x25, 0x6e, 0x63, 0x74, 0x79, 0x5a, 0x57, 0x40, 0x4d, 0xda, 0xd7, 0xc0, 0xcd, 0xee, 0xe3, 0xf4, 0xf9, 0xb2, 0xbf, 0xa8, 0xa5, 0x86, 0x8b, 0x9c, 0x91, 0x0a, 0x07, 0x10, 0x1d, 0x3e, 0x33, 0x24, 0x29, 0x62, 0x6f, 0x78, 0x75, 0x56, 0x5b, 0x4c, 0x41, 0x61, 0x6c, 0x7b, 0x76, 0x55, 0x58, 0x4f, 0x42, 0x09, 0x04, 0x13, 0x1e, 0x3d, 0x30, 0x27, 0x2a, 0xb1, 0xbc, 0xab, 0xa6, 0x85, 0x88, 0x9f, 0x92, 0xd9, 0xd4, 0xc3, 0xce, 0xed, 0xe0, 0xf7, 0xfa, 0xb7, 0xba, 0xad, 0xa0, 0x83, 0x8e, 0x99, 0x94, 0xdf, 0xd2, 0xc5, 0xc8, 0xeb, 0xe6, 0xf1, 0xfc, 0x67, 0x6a, 0x7d, 0x70, 0x53, 0x5e, 0x49, 0x44, 0x0f, 0x02, 0x15, 0x18, 0x3b, 0x36, 0x21, 0x2c, 0x0c, 0x01, 0x16, 0x1b, 0x38, 0x35, 0x22, 0x2f, 0x64, 0x69, 0x7e, 0x73, 0x50, 0x5d, 0x4a, 0x47, 0xdc, 0xd1, 0xc6, 0xcb, 0xe8, 0xe5, 0xf2, 0xff, 0xb4, 0xb9, 0xae, 0xa3, 0x80, 0x8d, 0x9a, 0x97 };
        static byte[] lookup_g14 = { 0x00, 0x0e, 0x1c, 0x12, 0x38, 0x36, 0x24, 0x2a, 0x70, 0x7e, 0x6c, 0x62, 0x48, 0x46, 0x54, 0x5a, 0xe0, 0xee, 0xfc, 0xf2, 0xd8, 0xd6, 0xc4, 0xca, 0x90, 0x9e, 0x8c, 0x82, 0xa8, 0xa6, 0xb4, 0xba, 0xdb, 0xd5, 0xc7, 0xc9, 0xe3, 0xed, 0xff, 0xf1, 0xab, 0xa5, 0xb7, 0xb9, 0x93, 0x9d, 0x8f, 0x81, 0x3b, 0x35, 0x27, 0x29, 0x03, 0x0d, 0x1f, 0x11, 0x4b, 0x45, 0x57, 0x59, 0x73, 0x7d, 0x6f, 0x61, 0xad, 0xa3, 0xb1, 0xbf, 0x95, 0x9b, 0x89, 0x87, 0xdd, 0xd3, 0xc1, 0xcf, 0xe5, 0xeb, 0xf9, 0xf7, 0x4d, 0x43, 0x51, 0x5f, 0x75, 0x7b, 0x69, 0x67, 0x3d, 0x33, 0x21, 0x2f, 0x05, 0x0b, 0x19, 0x17, 0x76, 0x78, 0x6a, 0x64, 0x4e, 0x40, 0x52, 0x5c, 0x06, 0x08, 0x1a, 0x14, 0x3e, 0x30, 0x22, 0x2c, 0x96, 0x98, 0x8a, 0x84, 0xae, 0xa0, 0xb2, 0xbc, 0xe6, 0xe8, 0xfa, 0xf4, 0xde, 0xd0, 0xc2, 0xcc, 0x41, 0x4f, 0x5d, 0x53, 0x79, 0x77, 0x65, 0x6b, 0x31, 0x3f, 0x2d, 0x23, 0x09, 0x07, 0x15, 0x1b, 0xa1, 0xaf, 0xbd, 0xb3, 0x99, 0x97, 0x85, 0x8b, 0xd1, 0xdf, 0xcd, 0xc3, 0xe9, 0xe7, 0xf5, 0xfb, 0x9a, 0x94, 0x86, 0x88, 0xa2, 0xac, 0xbe, 0xb0, 0xea, 0xe4, 0xf6, 0xf8, 0xd2, 0xdc, 0xce, 0xc0, 0x7a, 0x74, 0x66, 0x68, 0x42, 0x4c, 0x5e, 0x50, 0x0a, 0x04, 0x16, 0x18, 0x32, 0x3c, 0x2e, 0x20, 0xec, 0xe2, 0xf0, 0xfe, 0xd4, 0xda, 0xc8, 0xc6, 0x9c, 0x92, 0x80, 0x8e, 0xa4, 0xaa, 0xb8, 0xb6, 0x0c, 0x02, 0x10, 0x1e, 0x34, 0x3a, 0x28, 0x26, 0x7c, 0x72, 0x60, 0x6e, 0x44, 0x4a, 0x58, 0x56, 0x37, 0x39, 0x2b, 0x25, 0x0f, 0x01, 0x13, 0x1d, 0x47, 0x49, 0x5b, 0x55, 0x7f, 0x71, 0x63, 0x6d, 0xd7, 0xd9, 0xcb, 0xc5, 0xef, 0xe1, 0xf3, 0xfd, 0xa7, 0xa9, 0xbb, 0xb5, 0x9f, 0x91, 0x83, 0x8d };
        static byte[] stack_stuff = { 0xDE, 0xAD, 0xCA, 0xFE, 0xFA, 0xCE, 0xB0, 0x0C, 0xDE, 0xAD, 0xCA, 0xFE, 0xFA, 0xCE, 0xB0, 0x0C, 0xAD, 0x8A, 0x2C, 0x8A, 0x0F, 0x92, 0xBB, 0x93, 0xEA, 0x47, 0x80, 0x48, 0x7D, 0x37, 0x55, 0x96, 0x87, 0x3C, 0xE5, 0x6A, 0xC9, 0x07, 0x0B, 0x62, 0x4B, 0xD1, 0x7D, 0xCD, 0xC0, 0x29, 0x1E, 0xF9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5A, 0x01, 0x6C, 0x8F, 0x9F, 0xB6, 0x03, 0x02, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87, 0x94, 0x17, 0x40, 0xCA, 0x7B, 0x46, 0x8C, 0xF9, 0x25, 0xC6, 0xA9, 0xA8, 0x73, 0x31, 0x44, 0x90, 0xF1, 0x4B, 0x67, 0xCC, 0x79, 0x31, 0x91, 0x8B, 0x59, 0x00, 0x3E, 0x3B, 0xE3, 0x52, 0x6F, 0x3C, 0xAB, 0x91, 0x67, 0xD0, 0x50, 0xDC, 0x0A, 0x7C, 0x08, 0x6F, 0x3A, 0x31, 0x31, 0xBE, 0x3F, 0x6D, 0xA9, 0x6C, 0x8A, 0xE8, 0x42, 0xDE, 0x48, 0x87, 0x9B, 0xEE, 0x5F, 0xBE, 0x00, 0x20, 0x6E, 0x87 };
        static byte[] enrc_stuff = { 0xA0, 0xFF, 0xDB, 0x7A, 0xB1, 0xCF, 0x2D, 0xE1, 0x71, 0x04, 0xD7, 0xE9, 0x3D, 0xC4, 0x19, 0xC8, 0x9E, 0x86, 0x11, 0x13, 0xBB, 0x23, 0x74, 0x9F, 0x2B, 0xDF, 0xB4, 0xC3, 0xA7, 0x17, 0x8C, 0xEE, 0x70, 0x64, 0x9D, 0x27, 0x73, 0x74, 0x9C, 0xD9, 0xA3, 0x40, 0x58, 0x85, 0x94, 0xD1, 0x6D, 0xC4, 0xB1, 0x3D, 0x82, 0xEA, 0x0F, 0x1F, 0x84, 0x27, 0x82, 0x30, 0x0C, 0x63, 0x6D, 0x50, 0x86, 0xB5, 0x11, 0xED, 0x29, 0xF9, 0x06, 0xFD, 0xB1, 0x24, 0xB1, 0x79, 0x6F, 0x56, 0x83, 0x2C, 0x94, 0x55, 0x0B, 0x9C, 0x21, 0x93, 0x6C, 0xCC, 0xA8, 0xDC, 0x7B, 0x4E, 0xEA, 0xA7, 0x09, 0x75, 0xB6, 0x9D, 0x0C, 0xD6, 0x85, 0x8B, 0x90, 0x0E, 0x94, 0xCB, 0x2D, 0xB4, 0xEF, 0x5D, 0xE0, 0xA5, 0x76, 0x85, 0xE1, 0x7D, 0x00, 0xAB, 0x51, 0x15, 0x7D, 0xB7, 0x1D, 0x4E, 0x54, 0xD2, 0xD7, 0x68, 0x6A, 0xF6, 0xB2, 0xA8, 0xFF, 0x7A, 0x67, 0xB1, 0x59, 0xF6, 0xBE, 0x40, 0xD8, 0x36, 0x80, 0x8B, 0xE7, 0xBE, 0xB3, 0xC1, 0xFB, 0x0B, 0xCF, 0x02, 0x76, 0xDD, 0x5D, 0x36, 0x7B, 0x90, 0xD8, 0xB1, 0x0D, 0x90, 0x0B, 0x66, 0x57, 0xB8, 0x88, 0xF4, 0x12, 0x25, 0x6E, 0x6D, 0x72, 0x39, 0xA2, 0xE7, 0x3D, 0xD2, 0x4A, 0xD5, 0xA9, 0xF9, 0x02, 0xA8, 0xC9, 0x72, 0x94, 0xD1, 0x8D, 0x69, 0xFB, 0x65, 0x44, 0xE1, 0xF1, 0x05, 0x7C, 0x1E, 0xF6, 0xCB, 0x29, 0x24, 0xDB, 0x79, 0x15, 0x38, 0x28, 0x92, 0x89, 0xA9, 0xDE, 0xEF, 0x2D, 0x7A, 0x72, 0xCF, 0xD6, 0xA9, 0xB3, 0xFC, 0x88, 0x0C, 0x14, 0x09, 0x5C, 0xB1, 0x54, 0x5C, 0x24, 0xED, 0x3D, 0x97, 0x73, 0x01, 0x87, 0x54, 0x9E, 0x71, 0xBC, 0xE6, 0xD2, 0xEE, 0x7F, 0x51, 0x74, 0x47, 0xCF, 0xC8, 0x47, 0x80, 0x5E, 0x49, 0xA3, 0xF8, 0x47, 0xF4, 0xBE, 0x29, 0xD1, 0x1A, 0xDD, 0x95, 0x20, 0x6C, 0x90, 0x4B, 0xAA, 0x42, 0x5B, 0x64, 0xBE, 0x13, 0x07, 0x8B, 0x9B, 0xBA, 0x9D, 0xE3, 0xFB, 0xF9, 0x77, 0xF3, 0x8C, 0x7A, 0x7A, 0xE7, 0x16, 0xAC, 0xA1, 0x5B, 0x7E, 0x28, 0x7C, 0x16, 0xB3, 0x81, 0xD1, 0x98, 0x28, 0x2D, 0x7B, 0xEF, 0x4D, 0x37, 0x37, 0xDA, 0xC5, 0x59, 0xB7, 0xCF, 0xF8, 0x39, 0xFF, 0xED, 0xC1, 0x8B, 0x73, 0x9A, 0x11, 0xAD, 0xFB, 0x51, 0x7C, 0x50, 0x97, 0x51, 0x56, 0x88, 0x52, 0xA0, 0xDD, 0x20, 0x88, 0xA5, 0xEE, 0x3A, 0xF8, 0x6B, 0x6F, 0x6B, 0xE6, 0x27, 0x93, 0x30, 0x4E, 0x3F, 0xB9, 0x45, 0xA5, 0x1B, 0xD6, 0xA7, 0xAE, 0x84, 0x80, 0x0C, 0x2E, 0xC3, 0x81, 0xFF, 0xD7, 0x0E, 0xFC, 0x90, 0x9B, 0x4C, 0x1A, 0x5C, 0x4E, 0x53, 0x44, 0x49, 0x2F, 0xEE, 0xC7, 0xC6, 0xAF, 0xE6, 0xB5, 0x94, 0x84, 0x7E, 0x2C, 0x1B, 0x05, 0x84, 0xD4, 0x0C, 0x19, 0x5E, 0xC5, 0x16, 0x10, 0x5F, 0xBC, 0xF8, 0x54, 0xAE, 0x48, 0xDB, 0xA9, 0x6E, 0x81, 0x72, 0xFD, 0x3B, 0x12, 0xCD, 0x5D, 0xBF, 0x6E, 0xD2, 0xBD, 0x9D, 0x79, 0x89, 0xFB, 0x45, 0x47, 0x39, 0xF8, 0x01, 0xFF, 0xDE, 0x90, 0x0D, 0x03, 0xA3, 0xF0, 0x99, 0xB3, 0x32, 0x8E, 0x2C, 0x9B, 0x5D, 0xB5, 0x61, 0xFC, 0xF5, 0x86, 0x38, 0xB9, 0x84, 0x43, 0x16, 0xB9, 0x5E, 0x74, 0xBB, 0x99, 0x5D, 0x2D, 0xC6, 0xCE, 0x18, 0x18, 0xEA, 0xF7, 0x0A, 0x92, 0x8B, 0xB8, 0xBC, 0x12, 0x0E, 0x0D, 0xCD, 0x69, 0xDC, 0x6B, 0xAC, 0x63, 0xD6, 0x5C, 0xFE, 0xD0, 0xA2, 0xAB, 0x94, 0xB9, 0xDF, 0xCF, 0xF5, 0xE1, 0x1F, 0xB2, 0x80, 0xA1, 0xA3, 0x80, 0x43, 0xF3, 0x9F, 0xBA, 0x94, 0xF0, 0x0D, 0xBD, 0x2C, 0x42, 0x91, 0xF4, 0x7D, 0x4C, 0x02, 0x09, 0xAE, 0xCC, 0x37, 0x18, 0xD9, 0x35, 0xE9, 0xEB, 0x76, 0x6B, 0xB8, 0x16, 0x8D, 0xA8, 0x54, 0x3D, 0x29, 0x67, 0x45, 0x4D, 0x72, 0xFA, 0xEF, 0xB2, 0x19, 0x2D, 0x7A, 0xD7, 0x49, 0xC8, 0x48, 0xE8, 0x67, 0x2A, 0xF0, 0xA9, 0x03, 0x2C, 0x2B, 0xF5, 0xD5, 0x8D, 0x2C, 0x6A, 0xFB, 0x7F, 0xE8, 0x6F, 0x6E, 0x95, 0x78, 0xBF, 0xCC, 0x5A, 0x15, 0x68, 0xDD, 0xA6, 0x2F, 0x53, 0x98, 0x3C, 0x10, 0x19, 0x70, 0x2F, 0x73, 0x5A, 0xA8, 0x79, 0xC8, 0xCE, 0x0E, 0x64, 0x00, 0xFD, 0xF0, 0x51, 0x25, 0x15, 0x40, 0xED, 0xFB, 0x4A, 0x17, 0x53, 0xEB, 0x56, 0x60, 0x5F, 0xD1, 0x85, 0xA4, 0x8E, 0x62, 0x3F, 0xEB, 0x35, 0x98, 0x2B, 0x7A, 0xCC, 0x78, 0xE4, 0x3C, 0x50, 0x4E, 0x18, 0x04, 0x92, 0xB5, 0x81, 0x0B, 0x4B, 0x1F, 0x27, 0x0A, 0x51, 0xF9, 0x66, 0x87, 0x6E, 0x59, 0x5D, 0xED, 0xC0, 0x29, 0xB4, 0xEF, 0x61, 0x76, 0xF2, 0x3E, 0xFC, 0xD7, 0xE7, 0x6F, 0x72, 0x06, 0x5E, 0xE8, 0xDE, 0xF3, 0x4A, 0x2A, 0x60, 0x7C, 0x14, 0x73, 0xEF, 0xBC, 0x8B, 0x08, 0x21, 0x29, 0xF9, 0x80, 0x45, 0xD4, 0x7D, 0x76, 0x06, 0xA8, 0xA8, 0x8C, 0x37, 0xC0, 0xB1, 0x03, 0x95, 0x65, 0x0A, 0xBA, 0x2C, 0x2E, 0x6F, 0xC5, 0x70, 0x6C, 0x10, 0x74, 0x2E, 0xFC, 0x79, 0xCF, 0x07, 0xE6, 0x83, 0x2F, 0x9C, 0x60, 0xD8, 0x3A, 0x9E, 0xC3, 0xA0, 0xA3, 0xFF, 0xA2, 0xC0, 0x8A, 0x10, 0xEB, 0x0F, 0xA8, 0xC2, 0x95, 0x2F, 0x7A, 0x6A, 0xA4, 0xF9, 0x59, 0xA5, 0x25, 0x5C, 0xB5, 0xC5, 0xE6, 0x8D, 0xD6, 0xEF, 0x4B, 0xE1, 0x11, 0xF8, 0xB7, 0x89, 0xED, 0x64, 0x8C, 0xE4, 0x69, 0x4B, 0xDF, 0x86, 0x66, 0x57, 0xA3, 0xFA, 0x84, 0xEF, 0x97, 0xAF, 0xC6, 0x03, 0xF7, 0x34, 0x78, 0xFF, 0x0A, 0x60, 0x0D, 0xD5, 0x33, 0x9E, 0xE4, 0xCC, 0x26, 0xC4, 0x2E, 0x70, 0x36, 0x31, 0xA4, 0x7F, 0xFF, 0xD2, 0x8B, 0xB2, 0x2A, 0xF0, 0x8E, 0x38, 0x0C, 0x2E, 0x30, 0x9A, 0x72, 0x8A, 0x74, 0xE0, 0x8C, 0x68, 0xF6, 0xE2, 0x88, 0x9A, 0xAD, 0x1F, 0x02, 0x93, 0x5E, 0xD8, 0x2D, 0x48, 0x3E, 0x89, 0xC4, 0x73, 0xAC, 0x00, 0x86, 0x48, 0x53, 0xBF, 0xCB, 0x3F, 0x98, 0x43, 0x7E, 0x00, 0x64, 0x66, 0x28, 0xF7, 0xC4, 0xD2, 0xDC, 0xE1, 0xF5, 0x77, 0x91, 0x36, 0x1C, 0x67, 0x7A, 0xD3, 0xF7, 0x16, 0xC9, 0xDD, 0x5D, 0x95, 0x83, 0x63, 0x11, 0x9E, 0x3B, 0xF8, 0x8E, 0x4F, 0x0D, 0x28, 0xDF, 0x9C, 0xE3, 0xDD, 0x8B, 0x32, 0xCB, 0x89, 0x77, 0x1A, 0xD4, 0xD2, 0x20, 0x58, 0xAB, 0x71, 0x6D, 0xFF, 0x81, 0xB8, 0x0A, 0x1E, 0xB7, 0x00, 0x4D, 0x06, 0xCE, 0x94, 0x86, 0x42, 0x25, 0x30, 0x01, 0x34, 0x74, 0xFB, 0x1B, 0x4D, 0xCE, 0xA6, 0xB3, 0xC6, 0x16, 0x68, 0x5C, 0x30, 0x64, 0xCF, 0xF9, 0xC6, 0xAE, 0xFC, 0x93, 0x73, 0xA9, 0x7A, 0x39, 0xF6, 0xB0, 0x79, 0x2E, 0x1A, 0xC0, 0xFA, 0x74, 0x8A, 0xAE, 0x49, 0xDE, 0x7D, 0x4E, 0xE1, 0xA0, 0xDA, 0x8C, 0x07, 0x36, 0xCF, 0xBA, 0x5E, 0x18, 0xEA, 0x30, 0x06, 0xD2, 0x2B, 0xFD, 0x7E, 0xCA, 0xB5, 0x1A, 0x79, 0x96, 0x18, 0x04, 0x1A, 0x7A, 0xA4, 0x08, 0x01, 0xA9, 0x33, 0x9A, 0xE0, 0xA6, 0xEF, 0x4A, 0x8D, 0xEE, 0xCA, 0x31, 0x5A, 0x8E, 0xBF, 0x71, 0xB0, 0x86, 0x3F, 0x50, 0x66, 0xD1, 0xF6, 0x30, 0xD4, 0xA8, 0xAB, 0x98, 0x43, 0x69, 0x9B, 0x35, 0x3C, 0xB2, 0x95, 0x27, 0xFD, 0x38, 0xE3, 0x7A, 0x77, 0x17, 0x15, 0x0B, 0xF0, 0x9E, 0xF5, 0x80, 0xBE, 0xD3, 0x20, 0x49, 0xC4, 0x0B, 0x90, 0x36, 0x24, 0x3D, 0xB9, 0x96, 0x9B, 0x74, 0xFE, 0x94, 0x56, 0xDC, 0x8B, 0x2A, 0xB3, 0xDD, 0x7A, 0xF5, 0xF1, 0x08, 0x71, 0x4F, 0xBC, 0x02, 0x0F, 0x75, 0x8A, 0x78, 0xEA, 0x08, 0xAA, 0xFF, 0xCB, 0x04, 0x6C, 0x96, 0xA8, 0x18, 0xDA, 0x4A, 0x86, 0x80, 0x5C, 0x63, 0x66, 0x8A, 0x2F, 0x8E, 0x2F, 0xEC, 0x22, 0x19, 0x51, 0x48, 0x09, 0x35, 0xBB, 0xD1, 0x19, 0xC1, 0x14, 0xF3, 0x91, 0x17, 0x9E, 0x9D, 0x48, 0x87, 0xAF, 0xE8, 0x00, 0x25, 0xA0, 0x39, 0x0E, 0xFB, 0x9B, 0xFF, 0x73, 0x12, 0x17, 0x93, 0x73, 0xD8, 0x55, 0x2A, 0x7D, 0x87, 0xF1, 0x20, 0x32, 0xD9, 0xE4, 0x3D, 0x60, 0x50, 0xC9, 0x6E, 0x4D, 0x99, 0xD4, 0x56, 0x4B, 0x30, 0x8D, 0x4F, 0xF8, 0x7B, 0x68, 0x43, 0x65, 0x0B, 0xFE, 0xEF, 0x97, 0x7D, 0x67, 0x8E, 0xF9, 0x20, 0x2C, 0x04, 0x35, 0x31, 0xC3, 0x2D, 0xAB, 0x2F, 0x55, 0x1A, 0xC3, 0x2F, 0xD3, 0x8D, 0x9C, 0xFF, 0x9B, 0xAC, 0x39, 0x97, 0xD5, 0x77, 0x0D, 0x94, 0xCC, 0x29, 0x95, 0xF9, 0xB7, 0x10, 0xD4, 0xD8, 0x92, 0x3A, 0xB3, 0x9D, 0x8B, 0x57, 0x5F, 0xDA, 0x26, 0x7E, 0xEB, 0xB3, 0x33, 0x24, 0x39, 0x08, 0x7C, 0xB4, 0x73, 0xC2, 0x3C, 0x16, 0x53, 0x8B, 0xC2, 0x5D, 0xF8, 0xB8, 0x6B, 0xBD, 0x93, 0x22, 0x36, 0x97, 0x4D, 0x94, 0x50, 0xF1, 0x5F, 0x40, 0xD8, 0x48, 0xDA, 0xCC, 0x09, 0x08, 0x82, 0xD1, 0x8C, 0x2F, 0x9F, 0xF2, 0xCA, 0xE0, 0x8F, 0x43, 0x3F, 0x18, 0x34, 0x5D, 0x38, 0x9C, 0x63, 0x49, 0xAC, 0x0C, 0x8F, 0xED, 0x13, 0x9A, 0x9F, 0x36, 0xA4, 0x56, 0x40, 0x37, 0xE0, 0xFB, 0x6C, 0xFB, 0x8A, 0xB7, 0xFA, 0xA0, 0x29, 0x1D, 0xBA, 0xFA, 0xF9, 0x4E, 0xD0, 0x62, 0x44, 0x3B, 0x04, 0x3C, 0x59, 0x33, 0xEF, 0x37, 0xAC, 0xE3, 0x01, 0xD0, 0xE5, 0xB0, 0xDC, 0xED, 0x3D, 0x22, 0xC1, 0x3A, 0x30, 0x3B, 0x70, 0xA6, 0x46, 0x35, 0x4C, 0xED, 0x56, 0x96, 0x0A, 0x75, 0x84, 0xEA, 0x6B, 0x65, 0xE8, 0xBE, 0x09, 0xBE, 0xCF, 0xC1, 0x35, 0x28, 0xCB, 0x54, 0x47, 0xDF, 0x9D, 0x56, 0x7F, 0xB2, 0x8B, 0x6F, 0x7D, 0xFD, 0x8F, 0x59, 0x26, 0xDB, 0x80, 0x7D, 0xD0, 0xD7, 0xA1, 0xF7, 0xA4, 0xB6, 0x02, 0x65, 0x2A, 0x66, 0xEF, 0xF6, 0x20, 0x4E, 0x4E, 0xA6, 0x1C, 0x3A, 0xD1, 0xBC, 0xBE, 0x37, 0x1C, 0x0D, 0x55, 0x7E, 0x76, 0xFB, 0xB5, 0x3E, 0x12, 0xD1, 0x69, 0xAA, 0xA2, 0xA9, 0x35, 0x15, 0x23, 0x62, 0x97, 0xA1, 0xB7, 0xE2, 0xF7, 0x4C, 0xCE, 0x1B, 0x0C, 0xD9, 0xF0, 0xCE, 0x69, 0xD0, 0x29, 0x9B, 0xA0, 0xDF, 0x5D, 0x28, 0x76, 0xB6, 0xC7, 0xD1, 0xF4, 0xEE, 0xDA, 0xF2, 0x86, 0x74, 0x8B, 0xF6, 0x99, 0xB9, 0xCB, 0x5C, 0x68, 0x8F, 0x12, 0x40, 0x10, 0x3E, 0x2E, 0xD8, 0xC1, 0x24, 0x9E, 0x38, 0x24, 0xBF, 0x69, 0x8D, 0x75, 0xC2, 0x6C, 0x22, 0x93, 0xD5, 0xF0, 0xEE, 0xB7, 0x53, 0x1C, 0x74, 0xCE, 0x7C, 0x1D, 0x0F, 0x21, 0xCA, 0xFF, 0xFE, 0x7A, 0xF5, 0x5A, 0xC6, 0x8A, 0xB2, 0xCD, 0xFB, 0xEA, 0xD7, 0x66, 0xCB, 0xB1, 0x80, 0xE0, 0xA4, 0x0E, 0xD4, 0x07, 0x61, 0x74, 0xCB, 0x2F, 0xDE, 0xA6, 0x6B, 0x04, 0xFD, 0x04, 0x2E, 0x3D, 0xC7, 0x4B, 0xC2, 0xBF, 0x39, 0xEA, 0x7D, 0xE4, 0x30, 0x86, 0x59, 0xB0, 0x02, 0x18, 0x6A, 0x71, 0xDB, 0xA4, 0x4F, 0x11, 0x8B, 0x01, 0x4B, 0x64, 0x3F, 0x25, 0x13, 0x22, 0xEB, 0x7D, 0xAD, 0xB1, 0x6D, 0xC5, 0x6A, 0x57, 0x16, 0x4F, 0xEC, 0x00, 0xCA, 0x53, 0xE5, 0x99, 0x69, 0xF7, 0xA2, 0xE1, 0x09, 0xA0, 0x53, 0xA0, 0xA5, 0xC1, 0x4B, 0x52, 0x8B, 0xED, 0x91, 0x8B, 0x6F, 0x84, 0x1E, 0xDA, 0x19, 0x83, 0x5C, 0xCF, 0x39, 0x97, 0xA7, 0xD5, 0xD2, 0x13, 0x82, 0xFB, 0xC3, 0x06, 0x35, 0x02, 0x9C, 0xBB, 0x87, 0x31, 0x9F, 0xAE, 0xCD, 0xA9, 0x3C, 0xAF, 0x14, 0x7D, 0xAE, 0xD8, 0xB4, 0x7F, 0x27, 0xDC, 0xCB, 0x58, 0xE3, 0x30, 0x4F, 0xC0, 0xA6, 0xD8, 0x58, 0x0D, 0xE2, 0x35, 0x0E, 0xDA, 0x5C, 0x0C, 0x12, 0xA7, 0x83, 0xE5, 0x2C, 0xAA, 0x8A, 0xA6, 0xCF, 0xB4, 0x56, 0xD6, 0x0D, 0xA2, 0xE8, 0x80, 0x70, 0x11, 0xEB, 0x2E, 0xD9, 0x6B, 0x8B, 0xB5, 0x50, 0x64, 0xE0, 0x4A, 0x2C, 0x06, 0x99, 0x79, 0x3F, 0xAF, 0x7F, 0x8F, 0xEE, 0xD9, 0x00, 0x36, 0xB0, 0x93, 0x37, 0xFD, 0x68, 0x3A, 0xB7, 0x30, 0xD7, 0x6A, 0x3D, 0x69, 0x07, 0x35, 0xA7, 0x52, 0x3A, 0xB6, 0xA6, 0xA7, 0x27, 0xE6, 0xCB, 0x5B, 0x2B, 0xA2, 0xE8, 0x5C, 0xD6, 0x94, 0xCC, 0x4F, 0x75, 0xA4, 0x8C, 0xA1, 0x19, 0x72, 0xF4, 0xB5, 0x52, 0x68, 0x65, 0xF3, 0x7F, 0x9B, 0xE4, 0x30, 0x82, 0x5C, 0x04, 0xD7, 0xE2, 0xEF, 0x62, 0xAB, 0x60, 0xF5, 0x80, 0x53, 0x68, 0xDE, 0xEE, 0x60, 0xD0, 0x7D, 0xBD, 0xF8, 0x60, 0xA0, 0x5E, 0xF9, 0xB8, 0xDB, 0x3C, 0x85, 0x75, 0x6E, 0x7F, 0x5A, 0xC7, 0x0F, 0x29, 0x63, 0xD1, 0x7D, 0x9F, 0xCC, 0x11, 0x34, 0x14, 0x9E, 0xB3, 0x05, 0x99, 0x87, 0xFF, 0xD1, 0x4A, 0xDE, 0xC7, 0xE0, 0x60, 0x16, 0x1B, 0xAA, 0x1E, 0x53, 0xA9, 0xA9, 0x0B, 0xFD, 0xDD, 0x74, 0xC2, 0x76, 0x20, 0xEE, 0x0B, 0x7C, 0x80, 0xAC, 0xB9, 0xDE, 0xD9, 0xA1, 0x42, 0xA2, 0xE3, 0x6F, 0x89, 0x13, 0xFE, 0xD7, 0xBF, 0x07, 0x85, 0xE3, 0x34, 0x2A, 0x8C, 0x2A, 0x71, 0x24, 0x6B, 0xB0, 0xF8, 0x8A, 0x43, 0x39, 0x16, 0x30, 0xCB, 0x06, 0xA3, 0xBD, 0x9C, 0x9C, 0xA9, 0x77, 0xC0, 0x4F, 0xFF, 0x26, 0xDD, 0x25, 0x9A, 0xB9, 0xD0, 0x1C, 0x93, 0xF0, 0xA7, 0x30, 0x03, 0xFF, 0x34, 0xC9, 0xA5, 0x5E, 0xA2, 0x7F, 0x36, 0xD6, 0xFA, 0x89, 0xD5, 0xAD, 0x23, 0x96, 0x23, 0x12, 0x78, 0x2E, 0x5B, 0x84, 0x50, 0x77, 0x91, 0x2A, 0x6E, 0x8F, 0x56, 0x37, 0x30, 0x78, 0xFD, 0x33, 0x54, 0xE8, 0xE0, 0x3C, 0x40, 0x0C, 0x8A, 0x37, 0x92, 0x28, 0x70, 0x55, 0xC4, 0x64, 0x20, 0x2A, 0x5E, 0x9C, 0x56, 0x15, 0x35, 0x14, 0x28, 0x13, 0xED, 0xEA, 0x26, 0xBF, 0x19, 0x6B, 0x8D, 0x6E, 0xC8, 0x8D, 0x10, 0xC0, 0x5F, 0x7F, 0x1A, 0xD1, 0xC6, 0x09, 0xF6, 0x29, 0xFC, 0x58, 0x8E, 0x09, 0xA3, 0x6A, 0xBE, 0x1F, 0xAC, 0xF6, 0x7E, 0x23, 0xDB, 0x12, 0x1A, 0x2D, 0x05, 0x5E, 0x13, 0xB3, 0x4D, 0x7C, 0x35, 0xA9, 0xF3, 0xA3, 0xD5, 0x70, 0x71, 0xBF, 0x97, 0xBA, 0x80, 0xCF, 0xC8, 0x5E, 0x4F, 0x95, 0x72, 0x5D, 0x91, 0x81, 0x38, 0x45, 0x57, 0xC4, 0xF9, 0x7F, 0x82, 0xA1, 0x86, 0xA3, 0x68, 0xA4, 0x3B, 0x95, 0xD7, 0x28, 0xF4, 0xA3, 0x11, 0xD2, 0x5A, 0x6E, 0x38, 0x52, 0x34, 0x43, 0xCF, 0x1F, 0x4B, 0x5B, 0x9C, 0xBA, 0xFF, 0x96, 0x0C, 0xBC, 0xCB, 0x90, 0x0A, 0x2F, 0x13, 0x74, 0x7A, 0x9E, 0x3F, 0x77, 0x20, 0xEF, 0x4C, 0x78, 0x45, 0x72, 0xE7, 0x68, 0xF5, 0x5D, 0xB6, 0x19, 0x89, 0x35, 0x41, 0xC4, 0x8E, 0x01, 0xA7, 0x82, 0xBC, 0x0D, 0x7C, 0x3B, 0x07, 0xE2, 0xF9, 0x17, 0xC5, 0xC2, 0xCB, 0x6E, 0x8D, 0x94, 0xAF, 0x25, 0x5A, 0x3B, 0x6A, 0x5D, 0xD8, 0x92, 0xAF, 0x90, 0x26, 0x28, 0xB1, 0x73, 0xDA, 0x8B, 0x39, 0x04, 0x08, 0x99, 0xF2, 0x5B, 0x69, 0x34, 0xD9, 0x0D, 0x4E, 0xFB, 0xA5, 0x2A, 0xEB, 0x33, 0x3A, 0x80, 0x76, 0xC9, 0x2E, 0xCD, 0xCD, 0xC1, 0x13, 0x3A, 0xD1, 0x3F, 0x7D, 0xDF, 0x27, 0xCC, 0x3D, 0xA5, 0xD8, 0x99, 0x08, 0x8B, 0x6B, 0xEF, 0x5D, 0x7C, 0x86, 0xAA, 0x88, 0xD6, 0x35, 0x32, 0x06, 0x56, 0xD3, 0xA4, 0x99, 0x34, 0x95, 0x63, 0xA0, 0x5F, 0x8E, 0x91, 0xC7, 0x98, 0x25, 0x80, 0x50, 0x6E, 0x7B, 0x97, 0x9A, 0x55, 0x0C, 0x90, 0x5D, 0xF3, 0xD6, 0xB7, 0xAF, 0x10, 0xD6, 0x58, 0x5A, 0x0E, 0xA2, 0x9D, 0x92, 0x38, 0x6F, 0xDD, 0x4D, 0x6B, 0xF3, 0x41, 0x2E, 0x10, 0x2E, 0xF2, 0x49, 0xF9, 0xD7, 0x2F, 0x83, 0x27, 0x2B, 0xA4, 0x59, 0xCE, 0x35, 0x1B, 0x51, 0x42, 0xE9, 0xBE, 0x66, 0xA1, 0xEB, 0x2D, 0x1D, 0x92, 0xA9, 0x9E, 0x03, 0x9D, 0x4A, 0x44, 0x4A, 0x8E, 0x47, 0x3D, 0xA9, 0x2B, 0x59, 0x66, 0x98, 0xB3, 0xE5, 0x0F, 0x29, 0x4B, 0xF8, 0xE8, 0x40, 0xF7, 0x6D, 0x0D, 0x8B, 0xF2, 0xF6, 0x5F, 0xEC, 0x69, 0xB0, 0xEC, 0x60, 0x1F, 0xA2, 0x6F, 0x65, 0x92, 0x42, 0xAF, 0xF4, 0x43, 0x0E, 0x23, 0xBA, 0xB3, 0x2B, 0xED, 0x48, 0x19, 0x2B, 0xC4, 0xDD, 0x92, 0x10, 0x65, 0x5A, 0x62, 0x09, 0x0D, 0xA3, 0x8B, 0xCD, 0x56, 0x5B, 0x8E, 0xE6, 0x6C, 0xC1, 0xB5, 0xE5, 0x1B, 0xE7, 0x1A, 0x94, 0x9A, 0x25, 0x9D, 0x75, 0x26, 0xDB, 0xAA, 0xE6, 0xFF, 0x6B, 0xFF, 0xCA, 0xAB, 0xCD, 0x55, 0xF2, 0xD7, 0x18, 0xBC, 0x65, 0xBF, 0xD7, 0xC0, 0xD4, 0xC6, 0x6B, 0xC4, 0xDB, 0xE5, 0xCF, 0xA0, 0x15, 0xF9, 0xB9, 0x65, 0x58, 0xD8, 0x62, 0xFA, 0xBD, 0x00, 0xBE, 0xD9, 0x32, 0xBD, 0x9B, 0x96, 0x66, 0x82, 0xEF, 0xA2, 0xC2, 0x16, 0x32, 0x67, 0xEB, 0xD8, 0x64, 0xEA, 0xEB, 0x91, 0x8A, 0x11, 0xB7, 0x76, 0x21, 0xCB, 0xE1, 0x19, 0x34, 0x77, 0xF5, 0x1F, 0xF7, 0xE7, 0x12, 0x86, 0x9B, 0x6D, 0xEE, 0xDC, 0x37, 0x52, 0x40, 0x94, 0x05, 0x9B, 0x4A, 0x50, 0x8C, 0xEA, 0xD1, 0x97, 0xF2, 0x2F, 0x12, 0x0F, 0x9C, 0xE6, 0xAE, 0x70, 0xB1, 0x4B, 0xB8, 0x73, 0x59, 0x59, 0xF4, 0x65, 0x96, 0x8F, 0xD0, 0x12, 0xB1, 0x37, 0x2F, 0xB8, 0xE8, 0x36, 0x78, 0xE3, 0xCA, 0x79, 0x73, 0xBD, 0xD8, 0x20, 0x2E, 0x47, 0xF1, 0x66, 0x77, 0x35, 0xF9, 0x36, 0xA0, 0xC4, 0x20, 0xD3, 0x0E, 0x2D, 0x8A, 0xC8, 0x9E, 0x89, 0x6A, 0xA3, 0x64, 0xDD, 0x89, 0x42, 0x90, 0xF3, 0xA4, 0x93, 0xA5, 0xB3, 0xC8, 0x2B, 0x07, 0x5A, 0xEA, 0x0F, 0x7C, 0x1D, 0x43, 0x0F, 0x1C, 0x22, 0xB5, 0x4E, 0xB0, 0xDB, 0xD0, 0x53, 0x8E, 0x88, 0xAB, 0x4C, 0x94, 0x0B, 0x01, 0x9F, 0x38, 0xC6, 0x15, 0x14, 0x05, 0xCE, 0xA0, 0x99, 0x7E, 0xF0, 0x9F, 0xAB, 0x48, 0x6D, 0xDC, 0xA4, 0xE2, 0x88, 0x34, 0x2A, 0x0F, 0x81, 0x27, 0x11, 0x68, 0xBF, 0x82, 0xA9, 0x60, 0x1F, 0x7B, 0xCC, 0x9B, 0x0E, 0xFD, 0x85, 0x92, 0x17, 0x50, 0xF7, 0x8B, 0x1E, 0x55, 0xCF, 0x00, 0xCC, 0x47, 0xAF, 0xBE, 0x68, 0xDB, 0xC6, 0xB2, 0xCB, 0x07, 0xD5, 0x0E, 0x4C, 0x84, 0xBD, 0xB7, 0x79, 0xF5, 0x92, 0xFA, 0xDD, 0x5F, 0x47, 0x26, 0x29, 0x58, 0x29, 0x15, 0xA2, 0x09, 0xEA, 0xFC, 0x30, 0xCB, 0x67, 0x23, 0xCC, 0xC8, 0x4D, 0xDF, 0x96, 0xD2, 0x4D, 0x12, 0x06, 0xA9, 0x31, 0x25, 0xAC, 0xF3, 0xC9, 0x36, 0x8E, 0x72, 0xEA, 0x0E, 0x54, 0x69, 0xC4, 0xA3, 0x36, 0xAE, 0xE3, 0x27, 0x88, 0x14, 0xED, 0x6B, 0x2F, 0x0C, 0x7B, 0xD4, 0x19, 0x91, 0x98, 0x9E, 0xF3, 0x65, 0x7E, 0xD0, 0xE5, 0x23, 0x2F, 0x4C, 0x11, 0x5E, 0x90, 0x1A, 0x11, 0xD3, 0x04, 0xA4, 0x71, 0x45, 0x3B, 0xEC, 0x0F, 0x1D, 0x4C, 0x37, 0xA6, 0x20, 0x43, 0x38, 0xEE, 0xB8, 0x08, 0x80, 0x09, 0xCB, 0x7F, 0x2D, 0x3E, 0xFE, 0x73, 0x66, 0x3B, 0x93, 0xE6, 0x68, 0xE1, 0xF9, 0x5E, 0x60, 0xEC, 0x6B, 0xFA, 0x41, 0xFF, 0x4F, 0xAC, 0xCE, 0xA7, 0x94, 0xEF, 0x84, 0xB1, 0x47, 0xFC, 0xDF, 0x2C, 0xD8, 0x94, 0x53, 0x6A, 0x86, 0xFE, 0xB7, 0xEA, 0x5F, 0x3F, 0xF2, 0x10, 0x56, 0x37, 0xC0, 0x08, 0xEF, 0x78, 0x4A, 0x6B, 0x9D, 0x00, 0x27, 0x38, 0x71, 0x38, 0x06, 0x4F, 0x07, 0xF7, 0x73, 0xF4, 0xED, 0x18, 0x8D, 0x72, 0x00, 0xEC, 0xA0, 0x48, 0xE3, 0xF4, 0x8B, 0x27, 0x39, 0x5E, 0x33, 0x24, 0x02, 0x12, 0x86, 0x43, 0xB3, 0xA2, 0x03, 0x07, 0xB2, 0x2C, 0x33, 0x5B, 0xB5, 0x7A, 0xE2, 0x72, 0x35, 0x29, 0x2D, 0x8B, 0x13, 0x7F, 0x6D, 0xC6, 0xFD, 0x51, 0xEB, 0x40, 0x3A, 0x82, 0x6A, 0xBD, 0x22, 0x3D, 0xAF, 0x85, 0xDA, 0xD2, 0x91, 0xEB, 0x2D, 0xD8, 0x8D, 0xB2, 0xDA, 0xAF, 0x94, 0x02, 0x7E, 0xC4, 0x71, 0xA6, 0xF4, 0xAE, 0x29, 0x72, 0xC2, 0x14, 0x01, 0xF2, 0x9E, 0x06, 0x03, 0x1F, 0x19, 0x89, 0x30, 0xC7, 0xCC, 0x76, 0xC5, 0x0D, 0x27, 0xF2, 0x95, 0xF2, 0x7B, 0xBC, 0xBD, 0xB1, 0xE1, 0x93, 0xF2, 0x5F, 0x19, 0x1F, 0x8C, 0x5C, 0x9A, 0xDD, 0xC3, 0xA7, 0xC7, 0x8A, 0x0A, 0x5D, 0xE9, 0x13, 0xE4, 0x58, 0x76, 0x62, 0xDD, 0xBD, 0xB6, 0xAA, 0x73, 0xF3, 0x16, 0x6F, 0x6D, 0x1D, 0xDB, 0xF4, 0xBC, 0x68, 0x8C, 0xB5, 0xDF, 0x96, 0x69, 0xD7, 0xA2, 0x32, 0xB1, 0x00, 0x5E, 0x53, 0xB5, 0x18, 0x3B, 0xFA, 0x3E, 0xFF, 0x95, 0x8C, 0xF5, 0xEC, 0xAF, 0x1F, 0xED, 0x99, 0xC4, 0xA6, 0x09, 0x81, 0x3A, 0x2D, 0x5F, 0x67, 0x84, 0xEB, 0xCD, 0x7A, 0xA3, 0xF2, 0xD9, 0xFC, 0xB2, 0x05, 0x7C, 0xF7, 0x1F, 0xB4, 0x58, 0xA4, 0xB4, 0x36, 0xA7, 0x75, 0xC6, 0x7D, 0xAC, 0xAA, 0x24, 0xD7, 0x7B, 0xDB, 0xA7, 0x4A, 0x16, 0x1C, 0x7C, 0xF5, 0x86, 0x71, 0x83, 0x32, 0x5E, 0x02, 0x78, 0x57, 0x05, 0x50, 0x92, 0xBA, 0xD5, 0x88, 0x8C, 0x0E, 0xC8, 0x22, 0x78, 0xDB, 0x81, 0x9E, 0x3A, 0xF4, 0x13 }; 

        /// <summary>
        /// Apply and reverse the rijndael s-box to all elements in an array
        /// http://en.wikipedia.org/wiki/Rijndael_S-box
        /// </summary>
        static void SubBytesInv(byte[] a)
        {
            for (int i = 0; i < a.Length; i++)
                a[i] = lookup_sbox_inv[a[i]];
        }

        /// <summary>
        /// Expand the 128-bit key to 11 round keys
        /// http://en.wikipedia.org/wiki/Rijndael_key_schedule#The_key_schedule
        /// </summary>
        static byte[] Expand()
        {
            byte[] round_keys = new byte[0xB0];
            for (int round = 0; round <= 10; round++)
            {
                // ... and each key has 16 bytes = 128 bits ...
                for (int i = 0; i < 16; i++)
                    // ... and each byte is a sum modulo 2 of 16 bytes of data
                    for (int j = 0; j < 16; j++)
                    {
                        var idx = (round << 8) + (i * 16) + j;
                        round_keys[round * 16 + i] ^= (byte)(enrc_stuff[idx] ^ stack_stuff[idx]);
                    }
            }
            return round_keys;
        }

        /// <summary>
        /// Xor the current cipher state by a specific round key
        /// </summary>
        static void XorRoundKey(byte[] state, byte[] keys, int round)
        {
            for (int i = 0; i < 16; i++)
            {
                state[i] ^= keys[i + round * 16];
            }
        }

        /// <summary>
        /// Reverse the shift rows step on the 16 byte cipher state
        /// </summary>
        static void ShiftRowsInv(byte[] state)
        {
            byte[] temp = new byte[16];
            Array.Copy(state, temp, 16);
            for (int i = 0; i < 16; i++)
                state[i] = temp[shift_rows_table_inv[i]];
        }


        /// <summary>
        /// Perform the inverse mix columns matrix on one column of 4 bytes
        /// </summary>
        static void MixColInv(byte[] state, int off)
        {
            byte a0 = state[off + 0];
            byte a1 = state[off + 1];
            byte a2 = state[off + 2];
            byte a3 = state[off + 3];
            state[off + 0] = (byte)(lookup_g14[a0] ^ lookup_g9[a3] ^ lookup_g13[a2] ^ lookup_g11[a1]);
            state[off + 1] = (byte)(lookup_g14[a1] ^ lookup_g9[a0] ^ lookup_g13[a3] ^ lookup_g11[a2]);
            state[off + 2] = (byte)(lookup_g14[a2] ^ lookup_g9[a1] ^ lookup_g13[a0] ^ lookup_g11[a3]);
            state[off + 3] = (byte)(lookup_g14[a3] ^ lookup_g9[a2] ^ lookup_g13[a1] ^ lookup_g11[a0]);
        }

        /// <summary>
        /// Perform the reverse mix columns matrix on each column of the 16 bytes
        /// </summary>
        static void MixColsInv(byte[] state)
        {
            MixColInv(state, 0);
            MixColInv(state, 4);
            MixColInv(state, 8);
            MixColInv(state, 12);
        }

        /// <summary>
        /// Decrypt a single 128 bit block by a 128 bit key using AES 
        /// </summary>
        public static byte[] Decrypt(byte[] m)
        {
            // Key expansion
            byte[] keys = Expand();

            // Reverse the final Round
            byte[] c = new byte[16];
            Array.Copy(m, c, 16);
            XorRoundKey(c, keys, 0);

            // Reverse the middle rounds
            for (int i = 0; i < 9; i++)
            {
                SubBytesInv(c);
                ShiftRowsInv(c);
                MixColsInv(c);
                XorRoundKey(c, keys, i + 1);
            }

            // Reverse the first Round
            SubBytesInv(c);
            ShiftRowsInv(c);
            XorRoundKey(c, keys, 10);

            return c;
        }
    }
}